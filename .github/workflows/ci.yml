name: Python CI with Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job for building the Docker image
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t my-python-app .

  # Job for running tests inside the Docker container
  test:
    runs-on: ubuntu-latest
    needs: build  # This job will only run after the "build" job finishes successfully
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2        

      - name: Build Docker image
        run: |
          docker build -t my-app .         

      - name: Run tests with pytest inside Docker container
        run: |
          docker run my-app

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2        

      # Step 2: Set up AWS CLI with GitHub Secrets (AWS credentials)
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2  # Region set to EU West (Ireland)

      # Step 3: Log in to Amazon ECR using AWS CLI
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 248189948146.dkr.ecr.eu-west-2.amazonaws.com

      # Step 4: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t my-python-app:latest .

      # Step 5: Tag the Docker image for ECR
      - name: Tag Docker image
        run: |
          docker tag my-python-app:latest 248189948146.dkr.ecr.eu-west-2.amazonaws.com/my-python-app:latest

      # Step 6: Push the Docker image to Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push 248189948146.dkr.ecr.eu-west-2.amazonaws.com/my-python-app:latest